// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        String  @id @default(uuid())
  email     String  @db.VarChar(40) @unique
  password  String  @db.VarChar(8)

  user      User?

  @@map("accounts")
}

model User {
  id                      String            @id @default(uuid())
  photoURL                String?           @db.VarChar(200) @map("photo_url")
  username                String            @db.VarChar(20)

  accountID               String            @unique @map("account_id")
  account                 Account           @relation(fields: [accountID], references: [id])

  profile                 Profile?

  friendshipsSent         Friendship[]      @relation("FriendshipSender")     // Solicitud que envio
  friendshipsReceived     Friendship[]      @relation("FriendshipReceiver")   // Solicitudes que recib√≠

  @@map("users")
}

model Profile {
  id              String    @id @default(uuid())
  firstname       String    @db.VarChar(10)
  lastname        String    @db.VarChar(10)
  birthday        DateTime
  description     String    @default("")
  friendsAmount   Int       @default(0) @map("friends_amount")

  userID          String    @unique @map("user_id")
  user            User      @relation(fields: [userID], references: [id])

  @@map("profiles")
}

model Friendship {
  firstFriendID   String    @map("first_friend_id")
  firstFriend     User      @relation("FriendshipSender", fields: [firstFriendID], references: [id])

  secondFriendID  String    @map("second_friend_id")
  secondFriend    User      @relation("FriendshipReceiver", fields: [secondFriendID], references: [id])

  status          String    @default("pending")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")

  @@id([firstFriendID, secondFriendID])
  @@map("friendships")
}
